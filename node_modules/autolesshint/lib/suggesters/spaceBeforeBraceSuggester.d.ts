import { ITextDeleteMutation } from "automutate/lib/mutators/textDeleteMutator";
import { ITextInsertMutation } from "automutate/lib/mutators/textInsertMutator";
import { ILesshintComplaint } from "../lesshint";
import { IFileInfo, ISuggester } from "../suggester";
export interface ISpaceBeforeBraceConfig {
    style?: "no_space" | "one_space";
}
/**
 * Adds fix suggestions for the spaceBeforeBrace rule.
 */
export declare class SpaceBeforeBraceSuggester implements ISuggester<ISpaceBeforeBraceConfig> {
    /**
     * Suggests a mutation to fix a complaint.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param config   Configuration options for the rule.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    suggestMutation(complaint: ILesshintComplaint, config: ISpaceBeforeBraceConfig, fileInfo: IFileInfo): ITextDeleteMutation | ITextInsertMutation;
    /**
     * Suggests a mutation to fix a complaint that there should be a space.
     * This suggested either removes extra spaces before a brace or adds a single space.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    private suggestOneSpaceMutation;
    /**
     * Suggests a mutation to fix a complaint that there should be no space.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    private suggestNoSpaceMutation;
}
