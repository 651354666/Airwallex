"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Adds fix suggestions for the spaceBeforeBrace rule.
 */
var SpaceBeforeBraceSuggester = /** @class */ (function () {
    function SpaceBeforeBraceSuggester() {
    }
    /**
     * Suggests a mutation to fix a complaint.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param config   Configuration options for the rule.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    SpaceBeforeBraceSuggester.prototype.suggestMutation = function (complaint, config, fileInfo) {
        return config.style === "one_space"
            ? this.suggestOneSpaceMutation(complaint, fileInfo)
            : this.suggestNoSpaceMutation(complaint, fileInfo);
    };
    /**
     * Suggests a mutation to fix a complaint that there should be a space.
     * This suggested either removes extra spaces before a brace or adds a single space.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    SpaceBeforeBraceSuggester.prototype.suggestOneSpaceMutation = function (complaint, fileInfo) {
        var tooManySpaces = (/\s\s+/g).test(complaint.source);
        if (tooManySpaces) {
            var originalInput = fileInfo.linesRaw.join("");
            var spaceLength = fileInfo.text.substring(complaint.position).search(/\s+/gi);
            return {
                range: {
                    begin: originalInput.substring(0, complaint.position).replace(/\s*$/g, "").length + spaceLength,
                    end: complaint.position
                },
                type: "text-delete"
            };
        }
        else {
            return {
                insertion: " ",
                range: {
                    begin: complaint.position
                },
                type: "text-insert"
            };
        }
    };
    /**
     * Suggests a mutation to fix a complaint that there should be no space.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    SpaceBeforeBraceSuggester.prototype.suggestNoSpaceMutation = function (complaint, fileInfo) {
        var originalInput = fileInfo.linesRaw.join("");
        var complaintStart = complaint.position - 1;
        return {
            range: {
                begin: complaintStart,
                end: originalInput.indexOf("{", complaintStart)
            },
            type: "text-delete"
        };
    };
    return SpaceBeforeBraceSuggester;
}());
exports.SpaceBeforeBraceSuggester = SpaceBeforeBraceSuggester;
//# sourceMappingURL=spaceBeforeBraceSuggester.js.map