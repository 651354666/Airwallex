"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Adds fix suggestions for the hex_length rule.
 */
var HexLengthSuggester = /** @class */ (function () {
    function HexLengthSuggester() {
    }
    /**
     * Suggests a mutation to fix a complaint.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param config   Configuration options for the rule.
     * @returns Suggested mutation for the fix.
     */
    HexLengthSuggester.prototype.suggestMutation = function (complaint, config) {
        return config.style === "short"
            ? this.suggestShortMutation(complaint)
            : this.suggestLongMutation(complaint);
    };
    /**
     * Suggests a mutation to fix a complaint that a hex should be short.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    HexLengthSuggester.prototype.suggestShortMutation = function (complaint) {
        return {
            insertion: [
                "#",
                complaint.source[complaint.column],
                complaint.source[complaint.column + 2],
                complaint.source[complaint.column + 4]
            ].join(""),
            range: {
                begin: complaint.position,
                end: complaint.position + 7
            },
            type: "text-swap"
        };
    };
    /**
     * Suggests a mutation to fix a complaint that a hex should be long.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    HexLengthSuggester.prototype.suggestLongMutation = function (complaint) {
        return {
            insertion: [
                "#",
                complaint.source[complaint.column],
                complaint.source[complaint.column],
                complaint.source[complaint.column + 1],
                complaint.source[complaint.column + 1],
                complaint.source[complaint.column + 2],
                complaint.source[complaint.column + 2]
            ].join(""),
            range: {
                begin: complaint.position,
                end: complaint.position + 4
            },
            type: "text-swap"
        };
    };
    return HexLengthSuggester;
}());
exports.HexLengthSuggester = HexLengthSuggester;
//# sourceMappingURL=hexLengthSuggester.js.map