"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
/**
 * Adds fix suggestions for the single_line_per_selector rule.
 */
var SingleLinePerSelectorSuggester = /** @class */ (function () {
    function SingleLinePerSelectorSuggester() {
    }
    /**
     * Suggests a mutation to fix a complaint, if possible.
     *
     * @param complaint   Complaint result from running Lesshint.
     * @param config   Configuration options for the rule.
     * @param fileInfo   Contents of the source file in various forms.
     * @returns Suggested mutation for the fix.
     */
    SingleLinePerSelectorSuggester.prototype.suggestMutation = function (complaint, config, fileInfo) {
        // The selector can somehow be the first line in the file
        // See https://github.com/automutate/autolesshint/issues/65
        var sourceLine = fileInfo.linesRaw[complaint.line - 1];
        if (sourceLine === undefined) {
            return undefined;
        }
        // The first property in a line shouldn't have a newline added
        if (!/\S/.test(sourceLine.substring(0, complaint.column - 1))) {
            return undefined;
        }
        return {
            insertion: utils_1.getLinebreakStyle(fileInfo.linesRaw),
            range: {
                begin: complaint.position
            },
            type: "text-insert"
        };
    };
    return SingleLinePerSelectorSuggester;
}());
exports.SingleLinePerSelectorSuggester = SingleLinePerSelectorSuggester;
//# sourceMappingURL=singleLinePerSelectorSuggester.js.map