"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
var path = require("path");
var fileProviderFactory_1 = require("../fileProviderFactory");
var localFileProvider_1 = require("../fileProviders/localFileProvider");
var mutationsApplier_1 = require("../mutationsApplier");
var mutatorFactory_1 = require("../mutatorFactory");
var mutatorSearcher_1 = require("../mutatorSearcher");
/**
 * Applies individual waves of file mutations to local files.
 */
var FileMutationsApplier = /** @class */ (function (_super) {
    __extends(FileMutationsApplier, _super);
    /**
     * Initializes a new instance of the FileMutationsApplier class.
     *
     * @param settings   Settings to be used for initialization.
     */
    function FileMutationsApplier(settings) {
        return _super.call(this, {
            fileProviderFactory: new fileProviderFactory_1.FileProviderFactory(function (fileName) { return new localFileProvider_1.LocalFileProvider(fileName); }),
            logger: settings.logger,
            mutatorFactory: new mutatorFactory_1.MutatorFactory(new mutatorSearcher_1.MutatorSearcher([
                path.join(__dirname, "../../lib/mutators")
            ].concat((settings.mutatorDirectories || []))), settings.logger)
        }) || this;
    }
    return FileMutationsApplier;
}(mutationsApplier_1.MutationsApplier));
exports.FileMutationsApplier = FileMutationsApplier;
//# sourceMappingURL=fileMutationsApplier.js.map