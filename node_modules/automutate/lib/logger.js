"use strict";
exports.__esModule = true;
/**
 * Default no-op class to generate output messages for significant operations.
 */
var Logger = /** @class */ (function () {
    function Logger() {
        /**
         * Mutations applied to each file, keyed by file name.
         */
        this.fileMutations = {};
        /**
         * Waves of file mutations.
         */
        this.mutationsWaves = [];
    }
    /**
     * Logs that mutations have completed.
     */
    Logger.prototype.onComplete = function () { };
    /**
     * Logs that a mutation was applied.
     *
     * @param fileName   Name of the file to be mutated.
     * @param mutation   The requesting mutation.
     */
    Logger.prototype.onMutation = function (fileName, mutation) {
        if (this.fileMutations[fileName]) {
            this.fileMutations[fileName].push(mutation);
        }
        else {
            this.fileMutations[fileName] = [mutation];
        }
    };
    /**
     * Logs that an unknown mutator was requested.
     *
     * @param _mutation   The requesting mutation.
     */
    Logger.prototype.onUnknownMutationType = function (_mutation) { };
    /**
     * Logs that a muations wave is about to start.
     *
     * @param mutationsWave   A wave of file mutations.
     */
    Logger.prototype.onWaveBegin = function (mutationsWave) {
        this.mutationsWaves.push(mutationsWave);
    };
    /**
     * Logs that a muations wave finished.
     *
     * @param _mutationsWave   A wave of file mutations.
     */
    Logger.prototype.onWaveEnd = function (_mutationsWave) { };
    /**
     * Gets file mutations for each file.
     *
     * @returns Mutations applied to each file, keyed by file name.
     */
    Logger.prototype.getFileMutations = function () {
        return this.fileMutations;
    };
    /**
     * Gets waves of file mutations.
     *
     * @returns Waves of file mutations.
     */
    Logger.prototype.getMutationsWaves = function () {
        return this.mutationsWaves;
    };
    return Logger;
}());
exports.Logger = Logger;
//# sourceMappingURL=logger.js.map