"use strict";
exports.__esModule = true;
var fs = require("fs");
var path = require("path");
var nameTransformer_1 = require("./nameTransformer");
/**
 * Suffix appended to all mutator classes.
 */
var mutatorClassSuffix = "Mutator";
/**
 * Searches for mutator classes.
 */
var MutatorSearcher = /** @class */ (function () {
    /**
     * Initializes a new instance of the MutatorSearcher class.
     *
     * @param nameTransformer  Transforms dashed-case names to camelCase.
     * @param directories   Directories to search within.
     */
    function MutatorSearcher(directories, nameTransformer) {
        if (nameTransformer === void 0) { nameTransformer = new nameTransformer_1.NameTransformer(); }
        this.nameTransformer = nameTransformer;
        this.directories = directories;
    }
    /**
     * Searches for a mutator sub-class within the directories.
     *
     * @param name   Dashed-case name of the mutator sub-class.
     * @returns The mutator sub-class, if it can be found.
     */
    MutatorSearcher.prototype.search = function (name) {
        var camelCaseName = this.nameTransformer.toCamelCase(name);
        for (var _i = 0, _a = this.directories; _i < _a.length; _i++) {
            var directory = _a[_i];
            var joinedPath = path.join(directory, "" + camelCaseName + mutatorClassSuffix + ".js");
            if (fs.existsSync(joinedPath)) {
                // tslint:disable-next-line no-require-imports no-unsafe-any
                return require(joinedPath)[this.nameTransformer.toPascalCase(name) + mutatorClassSuffix];
            }
        }
        return undefined;
    };
    return MutatorSearcher;
}());
exports.MutatorSearcher = MutatorSearcher;
//# sourceMappingURL=mutatorSearcher.js.map