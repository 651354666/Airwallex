"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Groups test cases into directories.
 */
var CaseGrouper = /** @class */ (function () {
    function CaseGrouper() {
    }
    /**
     * Groups test cases into directories.
     *
     * @param testCases   Test cases to be grouped.
     * @returns The test cases grouped into directories.
     */
    CaseGrouper.prototype.group = function (testCases) {
        var testDirectories = {};
        for (var _i = 0, testCases_1 = testCases; _i < testCases_1.length; _i++) {
            var testCase = testCases_1[_i];
            this.addTestCaseToDirectories(testCase, testDirectories);
        }
        return testDirectories;
    };
    /**
     * Adds a test case under its directory, creating directories as needed.
     *
     * @param testCase   A test case to be grouped.
     * @param tesDirectories   Nested directories of test cases.
     */
    CaseGrouper.prototype.addTestCaseToDirectories = function (testCase, testDirectories) {
        var currentDirectories = testDirectories;
        for (var i = 0; i < testCase.directoryPath.length - 1; i += 1) {
            var directoryName = testCase.directoryPath[i];
            if (!currentDirectories[directoryName]) {
                currentDirectories[directoryName] = {
                    cases: {},
                    directories: {}
                };
            }
            currentDirectories = currentDirectories[directoryName].directories;
        }
        var lastDirectoryName = testCase.directoryPath[testCase.directoryPath.length - 1];
        if (!currentDirectories[lastDirectoryName]) {
            currentDirectories[lastDirectoryName] = {
                cases: {},
                directories: {}
            };
        }
        currentDirectories[lastDirectoryName].cases[testCase.name] = testCase;
    };
    return CaseGrouper;
}());
exports.CaseGrouper = CaseGrouper;
//# sourceMappingURL=caseGrouper.js.map