"use strict";
/// <reference path="../../node_modules/@types/chai/index.d.ts" />
/// <reference path="../../node_modules/@types/mocha/index.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var nameTransformer_1 = require("../../lib/nameTransformer");
describe("NameTransformer", function () {
    describe("toCamelCase", function () {
        it("doesn't change a single word", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "aaa";
            // Act
            var transformed = transformer.toCamelCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("aaa");
        });
        it("combines two words", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "aaa-bbb";
            // Act
            var transformed = transformer.toCamelCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("aaaBbb");
        });
        it("combines three words", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "aaa-bbb-ccc";
            // Act
            var transformed = transformer.toCamelCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("aaaBbbCcc");
        });
        it("ignores casing", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "AaA-bBb-CCC-ddd";
            // Act
            var transformed = transformer.toCamelCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("aaaBbbCccDdd");
        });
    });
    describe("toPascalCase", function () {
        it("changes a single word", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "aaa";
            // Act
            var transformed = transformer.toPascalCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("Aaa");
        });
        it("combines two words", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "aaa-bbb";
            // Act
            var transformed = transformer.toPascalCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("AaaBbb");
        });
        it("combines three words", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "aaa-bbb-ccc";
            // Act
            var transformed = transformer.toPascalCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("AaaBbbCcc");
        });
        it("ignores casing", function () {
            // Arrange
            var transformer = new nameTransformer_1.NameTransformer();
            var name = "AaA-bBb-CCC-ddd";
            // Act
            var transformed = transformer.toPascalCase(name);
            // Assert
            chai_1.expect(transformed).to.be.equal("AaaBbbCccDdd");
        });
    });
});
//# sourceMappingURL=nameTransformerTests.js.map